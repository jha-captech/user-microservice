// Code generated by mockery v2.43.2. DO NOT EDIT.

package mock

import (
	models "github.com/jha-captech/user-microservice/internal/models"
	mock "github.com/stretchr/testify/mock"
)

// MockcreateUserServicer is an autogenerated mock type for the createUserServicer type
type MockcreateUserServicer struct {
	mock.Mock
}

type MockcreateUserServicer_Expecter struct {
	mock *mock.Mock
}

func (_m *MockcreateUserServicer) EXPECT() *MockcreateUserServicer_Expecter {
	return &MockcreateUserServicer_Expecter{mock: &_m.Mock}
}

// CreateUser provides a mock function with given fields: user
func (_m *MockcreateUserServicer) CreateUser(user models.User) (int, error) {
	ret := _m.Called(user)

	if len(ret) == 0 {
		panic("no return value specified for CreateUser")
	}

	var r0 int
	var r1 error
	if rf, ok := ret.Get(0).(func(models.User) (int, error)); ok {
		return rf(user)
	}
	if rf, ok := ret.Get(0).(func(models.User) int); ok {
		r0 = rf(user)
	} else {
		r0 = ret.Get(0).(int)
	}

	if rf, ok := ret.Get(1).(func(models.User) error); ok {
		r1 = rf(user)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockcreateUserServicer_CreateUser_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateUser'
type MockcreateUserServicer_CreateUser_Call struct {
	*mock.Call
}

// CreateUser is a helper method to define mock.On call
//   - user models.User
func (_e *MockcreateUserServicer_Expecter) CreateUser(user interface{}) *MockcreateUserServicer_CreateUser_Call {
	return &MockcreateUserServicer_CreateUser_Call{Call: _e.mock.On("CreateUser", user)}
}

func (_c *MockcreateUserServicer_CreateUser_Call) Run(run func(user models.User)) *MockcreateUserServicer_CreateUser_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(models.User))
	})
	return _c
}

func (_c *MockcreateUserServicer_CreateUser_Call) Return(_a0 int, _a1 error) *MockcreateUserServicer_CreateUser_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockcreateUserServicer_CreateUser_Call) RunAndReturn(run func(models.User) (int, error)) *MockcreateUserServicer_CreateUser_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockcreateUserServicer creates a new instance of MockcreateUserServicer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockcreateUserServicer(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockcreateUserServicer {
	mock := &MockcreateUserServicer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
