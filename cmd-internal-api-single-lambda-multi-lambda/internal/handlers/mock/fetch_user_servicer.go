// Code generated by mockery v2.43.2. DO NOT EDIT.

package mock

import (
	models "github.com/jha-captech/user-microservice/internal/models"
	mock "github.com/stretchr/testify/mock"
)

// MockfetchUserServicer is an autogenerated mock type for the fetchUserServicer type
type MockfetchUserServicer struct {
	mock.Mock
}

type MockfetchUserServicer_Expecter struct {
	mock *mock.Mock
}

func (_m *MockfetchUserServicer) EXPECT() *MockfetchUserServicer_Expecter {
	return &MockfetchUserServicer_Expecter{mock: &_m.Mock}
}

// FetchUser provides a mock function with given fields: ID
func (_m *MockfetchUserServicer) FetchUser(ID int) (models.User, error) {
	ret := _m.Called(ID)

	if len(ret) == 0 {
		panic("no return value specified for FetchUser")
	}

	var r0 models.User
	var r1 error
	if rf, ok := ret.Get(0).(func(int) (models.User, error)); ok {
		return rf(ID)
	}
	if rf, ok := ret.Get(0).(func(int) models.User); ok {
		r0 = rf(ID)
	} else {
		r0 = ret.Get(0).(models.User)
	}

	if rf, ok := ret.Get(1).(func(int) error); ok {
		r1 = rf(ID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockfetchUserServicer_FetchUser_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'FetchUser'
type MockfetchUserServicer_FetchUser_Call struct {
	*mock.Call
}

// FetchUser is a helper method to define mock.On call
//   - ID int
func (_e *MockfetchUserServicer_Expecter) FetchUser(ID interface{}) *MockfetchUserServicer_FetchUser_Call {
	return &MockfetchUserServicer_FetchUser_Call{Call: _e.mock.On("FetchUser", ID)}
}

func (_c *MockfetchUserServicer_FetchUser_Call) Run(run func(ID int)) *MockfetchUserServicer_FetchUser_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(int))
	})
	return _c
}

func (_c *MockfetchUserServicer_FetchUser_Call) Return(_a0 models.User, _a1 error) *MockfetchUserServicer_FetchUser_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockfetchUserServicer_FetchUser_Call) RunAndReturn(run func(int) (models.User, error)) *MockfetchUserServicer_FetchUser_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockfetchUserServicer creates a new instance of MockfetchUserServicer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockfetchUserServicer(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockfetchUserServicer {
	mock := &MockfetchUserServicer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
